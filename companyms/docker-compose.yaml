version: '3.7'
services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: cansavci
      POSTGRES_PASSWORD: cansavci
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-highcsavci@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - postgres
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres
  servicereg:
    image: karabairak/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - postgres
      - pgadmin
      - zipkin
    networks:
      - microservice-network
      - postgres
  companyms:
    image: karabairak/companyms:latest
    container_name: company
    ports:
      - "8081:8081"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  jobms:
    image: karabairak/jobms:latest
    container_name: job
    ports:
      - "8082:8082"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka
  reviewms:
    image: karabairak/reviewms:latest
    container_name: review
    ports:
      - "8083:8083"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  apigateway:
    image: karabairak/apigateway:latest
    container_name: apigateway
    ports:
      - "8084:8084"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  microservice-network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:

